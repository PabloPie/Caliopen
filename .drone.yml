workspace:
  base: /srv
  path: caliopen

clone:
  git:
    image: plugins/git
    depth: 10
    recursive: false
    when:
      branch: [ develop, master ]
      event: [ push ]

  git:
    image: plugins/git
    depth: 10
    recursive: false
    when:
      event: [ pull_request, tag, deployment ]

pipeline:

##################################
##          BASE IMAGES         ##
##################################

  build-caliopen-go:
    group: build0
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - DEPS=vendor
      - BASE_DIR=src/backend
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.caliopen-go
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_go
    when:
      branch: [ develop, master ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

#######################################################
##          TEST ON MASTER OR DEVELOP PR             ##
#######################################################

  # test-go:
  #   group: test
  #   image: public-registry.caliopen.org/caliopen_go
  #   environment:
  #     - BASE_DIR=src/backend
  #   when:
  #     branch: [ develop, master ]
  #     event: [ pull_request ]
  #   commands:
  #     - . devtools/drone/files_changed.sh
  #     - . devtools/drone/test_go.sh

  test-py:
    group: test
    image: public-registry.caliopen.org/caliopen_python
    environment:
      - CALIOPEN_BASEDIR=/srv/caliopen
      - BASE_DIR=src/backend
    when:
      branch: [ develop, master ]
      event: [ pull_request ]
      status: [ failure, success]
    commands:
      - . devtools/drone/files_changed.sh
      - . devtools/drone/test_py.sh

  test-frontend:
    group: test
    image: node:8
    when:
      branch: [ develop, master ]
      event: [ pull_request ]
      status: [ failure, success]
    secrets: [ SAUCE_USERNAME , SAUCE_ACCESS_KEY, SAUCE_ADDRESS ]
    environment:
      - SAUCE_PORT=4445
      - FRONTEND_ADDRESS=172.17.0.2
      - BASE_DIR=src/frontend
    commands:
      - . devtools/drone/files_changed.sh
      - . devtools/drone/test_front.sh

#########################################################
##          BUILD AND PUBLISH ON DEVELOP PUSH          ##
#########################################################

  # Python develop images
  build-py-cli-develop:
    group: build1
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.cli
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_cli
      - BASE_DIR=src/backend
      - LANG=python
      - PROG=tools/py.CLI
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_py_dependencies.sh # Get the list of dependencies
      - . devtools/drone/files_changed.sh # Check if any file has been modified
      - . devtools/drone/build_images.sh # Build docker image

  build-apiv1-develop:
    group: build1
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.py-api
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_apiv1
      - BASE_DIR=src/backend
      - LANG=python
      - PROG=interfaces/REST/py.server
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_py_dependencies.sh # Get the list of dependencies
      - . devtools/drone/files_changed.sh # Check if any file has been modified
      - . devtools/drone/build_images.sh # Build docker image

  build-mq-worker-develop:
    group: build1
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.mq-worker
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_mq_worker
      - BASE_DIR=src/backend
      - LANG=python
      - PROG=interfaces/NATS/py.client
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_py_dependencies.sh # Get the list of dependencies
      - . devtools/drone/files_changed.sh # Check if any file has been modified
      - . devtools/drone/build_images.sh # Build docker image

  # GO develop images
  build-apiv2-develop:
    group: build2
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.go-api
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_apiv2
      - PROG=interfaces/REST/go.server/cmd/caliopen_rest
      - BASE_DIR=src/backend
      - LANG=go
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_go_dependencies.sh
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

  build-lmtpd-develop:
    group: build2
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.go-lmtp
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_lmtpd
      - PROG=protocols/go.smtp/cmd/caliopen_lmtpd
      - BASE_DIR=src/backend
      - LANG=go
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_go_dependencies.sh
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

  build-idpoller-develop:
    group: build2
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.identity-poller
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_identity_poller
      - PROG=workers/go.remoteIDs/cmd/idpoller
      - BASE_DIR=src/backend
      - LANG=go
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_go_dependencies.sh
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

  build-imapworker-develop:
    group: build2
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY]
    environment:
      - PLUGIN_DOCKERFILE=src/backend/Dockerfile.imap-worker
      - PLUGIN_CONTEXT=/srv/caliopen/src/backend
      - PLUGIN_REPO=registry.caliopen.org/caliopen_imap_worker
      - PROG=protocols/go.imap/cmd/imapworker
      - BASE_DIR=src/backend
      - LANG=go
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/get_go_dependencies.sh
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

  # Frontend develop image
  build-frontend-develop:
    group: build3
    image: public-registry.caliopen.org/caliopen_drone_docker
    privileged: true
    secrets: [ DOCKER_USERNAME , DOCKER_PASSWORD, DOCKER_REGISTRY ]
    environment:
      - PLUGIN_DOCKERFILE=src/frontend/web_application/Dockerfile
      - PLUGIN_CONTEXT=/srv/caliopen/src/frontend/web_application
      - PLUGIN_REPO=registry.caliopen.org/caliopen_frontend
      - BASE_DIR=src/frontend/web_application
      - LANG=js
    when:
      branch: [ develop ]
      event: [ push ]
      status: [ failure, success]
    commands:
      - export PLUGIN_TAGS=develop,${DRONE_COMMIT_SHA}
      - . devtools/drone/files_changed.sh
      - . devtools/drone/build_images.sh

#########################################################
##          BUILD AND PUBLISH ON TAG: RELEASE-         ##
#########################################################

# Build and pusblish all images
  build-py-cli-release:
    group: release1
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.cli
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_cli
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-apiv1-release:
    group: release1
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.py-api
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_apiv1
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-mq-worker-release:
    group: release1
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.mq-worker
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_mq_worker
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-apiv2-release:
    group: release2
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.go-api
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_apiv2
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-lmtpd-release:
    group: release2
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.go-lmtp
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_lmtpd
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-idpoller-release:
    group: release2
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.identity-poller
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_identity_poller
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

  build-imapworker-release:
    group: release2
    image: plugins/docker
    dockerfile: src/backend/Dockerfile.imap-worker
    context: /srv/caliopen/src/backend
    repo: registry.caliopen.org/caliopen_imap_worker
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}

    build-all-release:
    group: release3
    image: plugins/docker
    dockerfile: src/frontend/web_application/Dockerfile
    context: /srv/caliopen/src/frontend/web_application
    repo: registry.caliopen.org/caliopen_frontend
    secrets: [ DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY ]
    when:
      ref: [ "refs/tags/release-*" ]
      event: [ tag ]
      status: [ failure, success]
    tags:
      - latest
      - ${DRONE_TAG##release-}
